name: Docker Image CI/CD

on:
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    name: Deploy to Multiple EC2 Instances
    runs-on: ubuntu-latest
    strategy:
      matrix:
        instance:
          - host: ${{ secrets.EC2_HOST_1 }}
            name: instance-1
          - host: ${{ secrets.EC2_HOST_2 }}
            name: instance-2
          - host: ${{ secrets.EC2_HOST_3 }}
            name: instance-3
          - host: ${{ secrets.EC2_HOST_4 }}
            name: instance-4

    steps:
    # 1. Conectar a cada instancia EC2 y desplegar la aplicaci√≥n
    - name: Deploy to EC2 - ${{ matrix.instance.name }}
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ matrix.instance.host }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY_2 }}
        port: 22
        script: |
          # Actualizar el sistema y configurar Docker
          sudo yum update -y
          sudo yum install -y docker
          sudo service docker start
          sudo usermod -a -G docker ec2-user
          
          # Descargar la nueva imagen y detener/eliminar el contenedor actual
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/tercera-pagina:latest
          sudo docker ps -q --filter "name=tercera-pagina" | grep -q . && \
            sudo docker stop tercera-pagina && sudo docker rm tercera-pagina || true
          
          # Ejecutar el nuevo contenedor
          sudo docker run -d --name tercera-pagina -p 80:80 ${{ secrets.DOCKER_USERNAME }}/tercera-pagina:latest
