name: Docker Image CI/CD

on:
  pull_request:
    branches: [ "main" ]

jobs:
  deploy-instance-1:
    name: Deploy to EC2 Instance 1
    runs-on: ubuntu-latest
    needs: []
    steps:
    # Verificar que los secretos requeridos están configurados
    - name: Validate required secrets for Instance 1
      run: |
        if [[ -z "${{ secrets.EC2_HOST_1 }}" || -z "${{ secrets.EC2_USER }}" || -z "${{ secrets.EC2_SSH_KEY_2 }}" || -z "${{ secrets.DOCKER_USERNAME }}" ]]; then
          echo "Error: Missing one or more required secrets for Instance 1."
          exit 1
        fi

    # Conectar a la instancia EC2 y desplegar la aplicación
    - name: Deploy to EC2 - instance-1
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST_1 }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY_2 }}
        port: 22
        script: |
          # Actualizar el sistema y configurar Docker
          sudo yum update -y
          sudo yum install -y docker
          sudo service docker start
          sudo usermod -a -G docker ec2-user
          
          # Descargar la nueva imagen y detener/eliminar el contenedor actual
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/tercera-pagina:latest
          sudo docker ps -q --filter "name=tercera-pagina" | grep -q . && \
            sudo docker stop tercera-pagina && sudo docker rm tercera-pagina || true
          
          # Ejecutar el nuevo contenedor
          sudo docker run -d --name tercera-pagina -p 80:80 ${{ secrets.DOCKER_USERNAME }}/tercera-pagina:latest

  deploy-instance-2:
    name: Deploy to EC2 Instance 2
    runs-on: ubuntu-latest
    needs: []
    steps:
    # Verificar que los secretos requeridos están configurados
    - name: Validate required secrets for Instance 2
      run: |
        if [[ -z "${{ secrets.EC2_HOST_2 }}" || -z "${{ secrets.EC2_USER }}" || -z "${{ secrets.EC2_SSH_KEY_2 }}" || -z "${{ secrets.DOCKER_USERNAME }}" ]]; then
          echo "Error: Missing one or more required secrets for Instance 2."
          exit 1
        fi

    # Conectar a la instancia EC2 y desplegar la aplicación
    - name: Deploy to EC2 - instance-2
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST_2 }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY_2 }}
        port: 22
        script: |
          # Actualizar el sistema y configurar Docker
          sudo yum update -y
          sudo yum install -y docker
          sudo service docker start
          sudo usermod -a -G docker ec2-user
          
          # Descargar la nueva imagen y detener/eliminar el contenedor actual
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/tercera-pagina:latest
          sudo docker ps -q --filter "name=tercera-pagina" | grep -q . && \
            sudo docker stop tercera-pagina && sudo docker rm tercera-pagina || true
          
          # Ejecutar el nuevo contenedor
          sudo docker run -d --name tercera-pagina -p 80:80 ${{ secrets.DOCKER_USERNAME }}/tercera-pagina:latest

  deploy-instance-3:
    name: Deploy to EC2 Instance 3
    runs-on: ubuntu-latest
    needs: []
    steps:
    # Verificar que los secretos requeridos están configurados
    - name: Validate required secrets for Instance 3
      run: |
        if [[ -z "${{ secrets.EC2_HOST_3 }}" || -z "${{ secrets.EC2_USER }}" || -z "${{ secrets.EC2_SSH_KEY_2 }}" || -z "${{ secrets.DOCKER_USERNAME }}" ]]; then
          echo "Error: Missing one or more required secrets for Instance 3."
          exit 1
        fi

    # Conectar a la instancia EC2 y desplegar la aplicación
    - name: Deploy to EC2 - instance-3
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST_3 }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY_2 }}
        port: 22
        script: |
          # Actualizar el sistema y configurar Docker
          sudo yum update -y
          sudo yum install -y docker
          sudo service docker start
          sudo usermod -a -G docker ec2-user
          
          # Descargar la nueva imagen y detener/eliminar el contenedor actual
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/tercera-pagina:latest
          sudo docker ps -q --filter "name=tercera-pagina" | grep -q . && \
            sudo docker stop tercera-pagina && sudo docker rm tercera-pagina || true
          
          # Ejecutar el nuevo contenedor
          sudo docker run -d --name tercera-pagina -p 80:80 ${{ secrets.DOCKER_USERNAME }}/tercera-pagina:latest

  deploy-instance-4:
    name: Deploy to EC2 Instance 4
    runs-on: ubuntu-latest
    needs: []
    steps:
    # Verificar que los secretos requeridos están configurados
    - name: Validate required secrets for Instance 4
      run: |
        if [[ -z "${{ secrets.EC2_HOST_4 }}" || -z "${{ secrets.EC2_USER }}" || -z "${{ secrets.EC2_SSH_KEY_2 }}" || -z "${{ secrets.DOCKER_USERNAME }}" ]]; then
          echo "Error: Missing one or more required secrets for Instance 4."
          exit 1
        fi

    # Conectar a la instancia EC2 y desplegar la aplicación
    - name: Deploy to EC2 - instance-4
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST_4 }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY_2 }}
        port: 22
        script: |
          # Actualizar el sistema y configurar Docker
          sudo yum update -y
          sudo yum install -y docker
          sudo service docker start
          sudo usermod -a -G docker ec2-user
          
          # Descargar la nueva imagen y detener/eliminar el contenedor actual
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/tercera-pagina:latest
          sudo docker ps -q --filter "name=tercera-pagina" | grep -q . && \
            sudo docker stop tercera-pagina && sudo docker rm tercera-pagina || true
          
          # Ejecutar el nuevo contenedor
          sudo docker run -d --name tercera-pagina -p 80:80 ${{ secrets.DOCKER_USERNAME }}/tercera-pagina:latest
